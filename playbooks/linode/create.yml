---
- name: Create linode instances
  hosts: localhost
  # Create the group for all k3s nodes
  vars:
    linode_cluster:
  vars_files:
    - config.yml
  roles:
    - role: infra
      vars:
        host_group: linode_cluster

- name: Provision linode instances if root access is granted
  hosts: linode_cluster
  gather_facts: false
  remote_user: root
  vars_files:
    - config.yml
  vars:
    ansible_ssh_private_key_file: "{{ ssh_key_output_path }}"
  tasks:
    - block:
        - name: Wait for SSH to become available
          wait_for_connection:
            delay: 10  # Wait for 10 seconds before checking
            timeout: 60  # Fail if SSH is not up after 60 seconds
          retries: 5
          delay: 10

        # Additional tasks will go here
        - include_role:
            name: provision

      rescue:
        - name: Handle SSH wait failure
          debug:
            msg: "root SSH connection failed. Skipping remaining tasks in this play."
    
- name: Install Tailscale
  hosts: linode_cluster
  remote_user: "{{ linode_user }}"
  vars_files:
    - config.yml
  vars:
    ansible_ssh_private_key_file: "{{ private_key_file }}" 
  pre_tasks:
    - name: Use tailscale service
      ansible.builtin.set_fact:
        tailscale_authkey: "{{ lookup('ansible.builtin.env', 'TAILSCALE_KEY') }}"

    - name: Set custom up argument for server
      ansible.builtin.set_fact:
        tailscale_args: "--advertise-tags tag:k3s-server,tag:k3s-cluster"
      when: inventory_hostname in groups['k3s-server']

    - name: Set custom up argument
      ansible.builtin.set_fact:
        tailscale_args: "--advertise-tags tag:k3s-agent,tag:k3s-cluster"
      when: inventory_hostname in groups['k3s-agent']

    - name: Install Tailscale with custom up argument
      ansible.builtin.include_role:
        name: artis3n.tailscale
           